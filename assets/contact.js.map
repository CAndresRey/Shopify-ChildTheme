{"version":3,"file":"contact.js","mappings":"mBAAO,MAAMA,EAAgBC,IAC3BA,EAAEC,OAAOC,MAAQF,EAAEC,OAAOC,MAAMC,QAAQ,QAAQ,GAAhD,ECcIC,EAAK,CAACC,EAAMC,KACRA,GAAkBC,UAAUC,cAAcH,GCb9CI,EAAgBT,IAEpB,MAAMU,EAAOV,EAAEC,OAAOU,QAAQ,QACxBC,EAAcR,EAAG,cAAeM,GAChCG,EAAcT,EAAG,WAAYM,IAE9BE,EAAYE,SAAWD,EAAYX,MAAMa,OAAS,EACrDX,EAAG,mBAAmBY,MAAMC,QAAU,OAEtCb,EAAG,mBAAmBY,MAAMC,QAAU,MACvC,EASkC,MACnC,MAAOC,UAAU,KAAEC,IAAWC,OAC1BD,EAAKE,SAAS,wBAChBjB,EAAG,qBAAqBY,MAAMC,QAAU,OACzC,ECxBHK,GDgBElB,EAAG,iBAAiBmB,iBAAiB,QAASd,GAC9CL,EAAG,wBAAwBmB,iBAAiB,QAASxB,E","sources":["webpack://theme-base-shopify/./src/utils/numeric-validation.js","webpack://theme-base-shopify/./src/utils/query-selector.js","webpack://theme-base-shopify/./src/components/form-contact.js","webpack://theme-base-shopify/./src/templates/contact.js"],"sourcesContent":["export const forceNumeric = (e) => {\n  e.target.value = e.target.value.replace(/[^\\d]/,'')\n}\n","/**\n * @param {String} nodes - ClassList with DOM reference\n * @param {HTMLElement} parent - Parent of nodes \n * @returns {Array} Array of nodes in DOM\n */\nconst $Qll = (nodes, parent) => {\n  return [...(parent ? parent : document).querySelectorAll(nodes)];\n}\n\n/**\n * \n * @param {HTMLElement} node - ClassName with DOM reference\n * @param {HTMLElement} parent - Parent of nodes\n * @returns {Node} Node in DOM\n */\nconst $Q = (node, parent) => {\n  return (parent ? parent : document).querySelector(node);\n}\n\nexport {\n  $Qll,\n  $Q\n}","import { forceNumeric } from \"../utils/numeric-validation\";\nimport { $Q } from \"../utils/query-selector\"\n\nconst validateForm = (e) => {\n\n  const form = e.target.closest('form');\n  const checkAccept = $Q('#validation', form);\n  const fieldBefore = $Q('textarea', form);\n\n  if (!checkAccept.checked && fieldBefore.value.length > 0) {\n    $Q('.error-check-js').style.display = 'flex'\n  } else {\n    $Q('.error-check-js').style.display = 'none'\n  }\n\n}\n\nexport const validateFormContact = () => {\n  $Q('.send-contact').addEventListener('click', validateForm);\n  $Q('input[type=\"number\"]').addEventListener('input', forceNumeric);\n}\n\nexport const validateCustomerExist = () => {\n  const {location: { href } } = window;\n  if (href.includes('form_type=customer')) {\n    $Q('.error-user-exist').style.display = 'flex';\n  }\n}\n","import { validateCustomerExist, validateFormContact } from \"../components/form-contact\";\n\nvalidateCustomerExist();\nvalidateFormContact();"],"names":["forceNumeric","e","target","value","replace","$Q","node","parent","document","querySelector","validateForm","form","closest","checkAccept","fieldBefore","checked","length","style","display","location","href","window","includes","validateCustomerExist","addEventListener"],"sourceRoot":""}