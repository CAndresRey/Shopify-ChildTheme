{"version":3,"file":"collection.js","mappings":"mBAKA,MAAMA,EAAO,CAACC,EAAOC,IACZ,KAAKA,GAAkBC,UAAUC,iBAAiBH,IASrDI,EAAK,CAACC,EAAMJ,KACRA,GAAkBC,UAAUI,cAAcD,GCdpDE,QAAQC,YAAc,IAkBtB,WACE,GAAIC,SAASC,OAAOC,OAAQ,CAC1B,IAAIC,EAASH,SAASC,OAAOG,UAAU,GAAGC,MAAM,KAEhD,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOD,OAAQI,IAAK,CACtC,IAAIC,EAAWJ,EAAOG,GAAGD,MAAM,KAE3BE,EAASL,SACXJ,QAAQC,YAAYS,mBAAmBD,EAAS,KAAOC,mBAAmBD,EAAS,OAR3F,GCfC,MASYE,EAAmB,CAACC,EAASd,EAAMe,EAAS,MACvD,MAAM,QAAEC,EAAF,cAAWC,GAAkBF,EAEnChB,EAAGe,GAASI,iBAAiB,SAAS,WACpCC,EAAWpB,EAAGC,GAAOgB,MAGvBC,GAAiBlB,EAAGkB,GAAeC,iBACjC,SACA,WACEC,EAAWpB,EAAGC,GAAOgB,OAWpB,SAASG,EAAYnB,EAAMgB,GAChC,MAAM,QAAEI,EAAF,GAAWC,GAAOrB,EAClBsB,EAhCU,GAAGA,OAAAA,KAAwB,SAAXA,EAgCjBC,CAASH,GAGtBA,EAAQE,OADNA,EACe,QAEA,OAGnBN,GAAWQ,EAAeH,EAAIC,EAAQtB,GASxC,MAAMwB,EAAiB,CAACH,EAAIC,EAAQtB,KAClC,MAAMyB,EAAa,YAAWJ,IACxBzB,EAASI,EAAK0B,WAEpB,GAAKJ,EASH1B,EAAO+B,YAAY5B,EAAG,IAAM0B,QATjB,CACX,MAAMT,EAAUnB,SAAS+B,cAAc,OAEvCZ,EAAQa,aAAa,KAAMJ,GAC3BT,EAAQc,UAAUC,IAAI,WAEtBnC,EAAOoC,aAAahB,EAAShB,GAC7Ba,EAAiB,IAAMY,EAAW,IAAMJ,EAAI,CAAEL,SAAS,MDzDzDjB,EAAG,YACFmB,iBACC,UACA,UAAS,OAAEe,IACT/B,QAAQC,YAAY+B,QAAUD,EAAOE,MACrC/B,SAASC,OAAS,IAAI+B,gBAAgBlC,QAAQC,aAAakC,cENjExB,EACE,eACA,UACA,CACEG,SAAS,IAIbH,EACE,wBACA,UACA,CACEG,SAAS,ICXN,WACL,MAAMsB,EAAU5C,EAAK,mBACf6C,EAAU7C,EAAK,mBACf8C,EAAWzC,EAAG,uBAEpBuC,EAAQG,SAAQC,IACVH,EAAQ,GAAGJ,QACbK,EAASG,MAAMC,KAAQL,EAAQ,GAAGJ,MAAQG,EAAQ,GAAGO,IAAO,IAAM,IAClEL,EAASG,MAAMG,MAAQ,IAAOP,EAAQ,GAAGJ,MAAQG,EAAQ,GAAGO,IAAO,IAAM,KAEzEH,EAAMxB,iBAAiB,SAAS6B,IAC5B,IAAIC,EAASV,EAAQ,GAAGH,MACxBc,EAASX,EAAQ,GAAGH,MAClBc,EAASD,EATJ,EAUsB,cAAvBD,EAAEd,OAAOiB,UACPZ,EAAQ,GAAGH,MAAQc,EAXpB,EAaCX,EAAQ,GAAGH,MAAQa,EAbpB,GAgBHT,EAAQ,GAAGJ,MAAQgB,WAAWH,GAAQI,QAAQ,GAC9Cb,EAAQ,GAAGJ,MAAQgB,WAAWF,GAAQG,QAAQ,GAC9CZ,EAASG,MAAMC,KAAQI,EAASV,EAAQ,GAAGO,IAAO,IAAM,IACxDL,EAASG,MAAMG,MAAQ,IAAOG,EAASX,EAAQ,GAAGO,IAAO,IAAM,WDR7EQ,I","sources":["webpack://theme-base-shopify/./src/utils/query-selector.js","webpack://theme-base-shopify/./src/components/sort-by.js","webpack://theme-base-shopify/./src/utils/toggle-dataset.js","webpack://theme-base-shopify/./src/templates/collection.js","webpack://theme-base-shopify/./src/components/filters-range.js"],"sourcesContent":["/**\n * @param {String} nodes - ClassList with DOM reference\n * @param {HTMLElement} parent - Parent of nodes \n * @returns {Array} Array of nodes in DOM\n */\nconst $Qll = (nodes, parent) => {\n  return [...(parent ? parent : document).querySelectorAll(nodes)];\n}\n\n/**\n * \n * @param {HTMLElement} node - ClassName with DOM reference\n * @param {HTMLElement} parent - Parent of nodes\n * @returns {Node} Node in DOM\n */\nconst $Q = (node, parent) => {\n  return (parent ? parent : document).querySelector(node);\n}\n\nexport {\n  $Qll,\n  $Q\n}","import { $Q } from \"../utils/query-selector\";\n\nShopify.queryParams = {};\n\n/**\n * Update sort_by query parameter on select change\n */\nexport const defultSortBy = () => {\n  $Q('#sort-by')\n  .addEventListener(\n    'change',\n    function({ target }) {\n      Shopify.queryParams.sort_by = target.value;\n      location.search = new URLSearchParams(Shopify.queryParams).toString();\n  });\n}\n\n/**\n * Preserve existing query parameters\n */\n(function() {\n  if (location.search.length) {\n    let params = location.search.substring(1).split('&');\n  \n    for (var i = 0; i < params.length; i++) {\n      let keyValue = params[i].split('=');\n  \n      if (keyValue.length) {\n        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);\n      }\n    }\n  }\n})();\n","import { $Q } from \"./query-selector\"\n\n/**\n * To validate state in dataset node\n */\n const isActive = ({ active }) => active === \"true\";\n\n/**\n * Data Active toggle\n *\n * @param {String} control - ID button control\n * @param {String} node - ID modal\n * @param {Object} config - Object with overlay, closeSelector\n */\nexport const toggleDataActive = (control, node, config = {}) => {\n  const { overlay, closeSelector } = config;\n\n  $Q(control).addEventListener(\"click\", function () {\n    dataToggle($Q(node), overlay);\n  });\n\n  closeSelector && $Q(closeSelector).addEventListener(\n    \"click\",\n    function () {\n      dataToggle($Q(node), overlay);\n    }\n  );\n}\n\n/**\n* Data Toggle\n*\n* @param {HTMLElement} node - Node to manipulate\n* @param {Boolean} overlay - if used to a overlay\n*/\nexport function dataToggle (node, overlay) {\n  const { dataset, id } = node;\n  const active = isActive(dataset);\n\n  if (active) {\n    dataset.active = \"false\";\n  } else {\n    dataset.active = \"true\";\n  }\n\n  overlay && overlayActions(id, active, node);\n}\n\n/**\n *\n * @param {String} id - ID from node manipulate\n * @param {Boolean} active - If modal active\n * @param {HTMLElement} node - Node to manipulate\n */\nconst overlayActions = (id, active, node) => {\n  const idOverlay = `overlay--${id}`;\n  const parent = node.parentNode;\n\n  if (!active) {\n    const overlay = document.createElement(\"div\");\n\n    overlay.setAttribute(\"id\", idOverlay);\n    overlay.classList.add(\"overlay\");\n\n    parent.insertBefore(overlay, node);\n    toggleDataActive(\"#\" + idOverlay, \"#\" + id, { overlay: true });\n  } else {\n    parent.removeChild($Q(\"#\" + idOverlay));\n  }\n}\n\n\n","import { defultSortBy } from \"../components/sort-by\";\nimport \"../scss/collection.scss\";\nimport { toggleDataActive } from \"../utils/toggle-dataset\";\nimport { rangeFilters } from \"../components/filters-range\";\n\ndefultSortBy();\n\ntoggleDataActive(\n  '#filter-open',\n  '#filter',\n  {\n    overlay: true\n  }\n)\n\ntoggleDataActive(\n  '.filter-form_name svg',\n  '#filter',\n  {\n    overlay: true\n  }\n)\n\nrangeFilters();\n","import { $Q, $Qll } from \"../utils/query-selector\"\n/**\n *\n * we control the price range filter in order to avoid that the minimum\n * value is greater than the highest value and that the highest\n * value is not less than the lowest value\n *\n */\nexport function rangeFilters() {\n  const rangein = $Qll(\".range-in input\");\n  const pricein = $Qll(\".price-in input\");\n  const progress = $Q('.slider-filter .pro');\n  let priceGap = 0;\n  rangein.forEach(input =>{\n    if (pricein[0].value){\n      progress.style.left = (pricein[0].value / rangein[0].max) * 100 + \"%\";\n      progress.style.right = 100 - (pricein[1].value / rangein[1].max) * 100 + \"%\";\n    }\n      input.addEventListener(\"input\", e =>{\n          let minVal = rangein[0].value,\n          maxVal = rangein[1].value;\n         if(maxVal - minVal < priceGap){\n             if(e.target.className === \"range-min\"){\n                  rangein[0].value = maxVal - priceGap;\n             }else{\n                  rangein[1].value = minVal + priceGap;\n             }\n         } else{\n              pricein[0].value = parseFloat(minVal).toFixed(2);\n              pricein[1].value = parseFloat(maxVal).toFixed(2);\n              progress.style.left = (minVal / rangein[0].max) * 100 + \"%\";\n              progress.style.right = 100 - (maxVal / rangein[1].max) * 100 + \"%\";\n         }\n      });\n  });\n}\n"],"names":["$Qll","nodes","parent","document","querySelectorAll","$Q","node","querySelector","Shopify","queryParams","location","search","length","params","substring","split","i","keyValue","decodeURIComponent","toggleDataActive","control","config","overlay","closeSelector","addEventListener","dataToggle","dataset","id","active","isActive","overlayActions","idOverlay","parentNode","removeChild","createElement","setAttribute","classList","add","insertBefore","target","sort_by","value","URLSearchParams","toString","rangein","pricein","progress","forEach","input","style","left","max","right","e","minVal","maxVal","className","parseFloat","toFixed","rangeFilters"],"sourceRoot":""}