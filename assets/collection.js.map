{"version":3,"file":"collection.js","mappings":"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","sources":["webpack://theme-base-shopify/./src/utils/query-selector.js","webpack://theme-base-shopify/./src/components/sort-by.js","webpack://theme-base-shopify/./src/components/video-frame.js","webpack://theme-base-shopify/./src/utils/toggle-dataset.js","webpack://theme-base-shopify/./src/components/filters-range.js","webpack://theme-base-shopify/./src/templates/collection.js"],"sourcesContent":["/**\r\n * @param {String} nodes - ClassList with DOM reference\r\n * @param {HTMLElement} parent - Parent of nodes\r\n * @returns {Array} Array of nodes in DOM\r\n */\r\nconst $Qll = (\r\n  nodes,\r\n  // eslint-disable-next-line no-undef\r\n  parent) => [...(parent || document).querySelectorAll(nodes)]\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} node - ClassName with DOM reference\r\n * @param {HTMLElement} parent - Parent of nodes\r\n * @returns {Node} Node in DOM\r\n */\r\n// eslint-disable-next-line no-undef\r\nconst $Q = (node, parent) => (parent || document).querySelector(node)\r\n\r\nexport {\r\n  $Qll,\r\n  $Q,\r\n}\r\n","import { $Q } from \"../utils/query-selector\";\r\n\r\n// eslint-disable-next-line no-undef\r\nShopify.queryParams = {};\r\n\r\n/**\r\n * Update sort_by query parameter on select change\r\n */\r\nexport const defultSortBy = () => {\r\n  $Q('#sort-by')\r\n  .addEventListener(\r\n    'change',\r\n    ({ target }) => {\r\n      /* eslint-disable no-undef */\r\n      Shopify.queryParams.sort_by = target.value;\r\n      location.search = new URLSearchParams(Shopify.queryParams).toString();\r\n      /* eslint-enable no-undef */\r\n  });\r\n}\r\n\r\n/**\r\n * Preserve existing query parameters\r\n */\r\n// eslint-disable-next-line func-names\r\n(function () {\r\n  /* eslint-disable no-undef */\r\n  if (location.search.length) {\r\n    const params = location.search.substring(1).split('&');\r\n\r\n    for (let i = 0; i < params.length; i++) {\r\n      const keyValue = params[i].split('=');\r\n\r\n      if (keyValue.length) {\r\n        Shopify.queryParams[\r\n          decodeURIComponent(keyValue[0])\r\n        ] = decodeURIComponent(keyValue[1]);\r\n      }\r\n    }\r\n  }\r\n  /* eslint-enable no-undef */\r\n}());\r\n","import { $Q, $Qll } from '../utils/query-selector';\r\nimport { dataToggleVideo } from '../utils/toggle-dataset';\r\n\r\n/**\r\n * Reset re-render DOM\r\n * @param {HTMLElement} modal - node content video frame\r\n */\r\nexport function resetVideo(modal) {\r\n  const wrapper = modal;\r\n  wrapper.innerHTML = $Q('.video__modal-wrapper', modal).outerHTML;\r\n}\r\n\r\n/**\r\n * Data Active toggle\r\n *\r\n * @param {String} control - ID button control\r\n * @param {String} node - ID modal\r\n */\r\nexport const activeVideoFrame = (control, node) => {\r\n  $Q(control).addEventListener('click', () => {\r\n    dataToggleVideo($Q(node), true, true)\r\n  });\r\n};\r\n\r\n/**\r\n * Init video section by id\r\n */\r\n(function initVideoFrame() {\r\n  $Qll('.video__button').forEach((button) => {\r\n    const { dataset: { section } } = button;\r\n\r\n    activeVideoFrame(\r\n      `#play-button-${section}-js`,\r\n      `#modal-video-${section}-js`,\r\n    );\r\n  })\r\n}())\r\n","import { resetVideo } from \"../components/video-frame\";\r\nimport { $Q } from \"./query-selector\"\r\n\r\n/**\r\n *\r\n * @param {String} id - ID from node manipulate\r\n * @param {Boolean} active - If modal active\r\n * @param {HTMLElement} node - Node to manipulate\r\n */\r\n const overlayActions = (id, active, node) => {\r\n  const idOverlay = `overlay--${id}`;\r\n  const parent = node.parentNode;\r\n\r\n  if (!active) {\r\n    // eslint-disable-next-line no-undef\r\n    const overlay = document.createElement(\"div\");\r\n\r\n    overlay.setAttribute(\"id\", idOverlay);\r\n    overlay.classList.add(\"overlay\");\r\n\r\n    parent.insertBefore(overlay, node);\r\n    // eslint-disable-next-line no-use-before-define\r\n    toggleDataActive(`#${idOverlay}`, `#${id}`, { overlay: true });\r\n  } else {\r\n    parent.removeChild($Q(`#${idOverlay}`));\r\n  }\r\n}\r\n\r\n/**\r\n * To validate state in dataset node\r\n */\r\nexport const isActive = ({ active }) => active === \"true\";\r\n\r\n/**\r\n* Data Toggle\r\n*\r\n* @param {HTMLElement} node - Node to manipulate\r\n* @param {Boolean} overlay - if used to a overlay\r\n*/\r\nexport function dataToggle(node, overlay) {\r\n\r\n  const { dataset, id } = node;\r\n  const active = isActive(dataset);\r\n\r\n  if (active) {\r\n    dataset.active = \"false\";\r\n  } else {\r\n    dataset.active = \"true\";\r\n  }\r\n\r\n  if (overlay) overlayActions(id, active, node);\r\n}\r\n/**\r\n * Data Active toggle\r\n *\r\n * @param {String} control - ID button control\r\n * @param {String} node - ID modal\r\n * @param {Object} config - Object with overlay, closeSelector\r\n */\r\n export const toggleDataActive = (control, node, config = {}) => {\r\n  const { overlay, closeSelector, video } = config;\r\n\r\n  $Q(control).addEventListener(\"click\", () => {\r\n    dataToggle($Q(node), overlay, video)\r\n  });\r\n\r\n  if (closeSelector) {\r\n    $Q(closeSelector).addEventListener(\r\n      \"click\",\r\n      () => dataToggle($Q(node), overlay),\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} id - ID from node manipulate\r\n * @param {Boolean} active - If modal active\r\n * @param {HTMLElement} node - Node to manipulate\r\n */\r\n const overlayActionsVideo = (id, node, { active, video }) => {\r\n  const idOverlay = `overlay--${id}`;\r\n  const parent = node.parentNode;\r\n\r\n  if (!active) {\r\n    const overlay = document.createElement(\"div\");\r\n\r\n    overlay.setAttribute(\"id\", idOverlay);\r\n    overlay.classList.add(\"overlay\");\r\n\r\n    parent.insertBefore(overlay, node);\r\n    toggleDataActive(`#${idOverlay}`, `#${id}`, { overlay: true, video });\r\n  } else {\r\n    parent.removeChild($Q(`#${idOverlay}`));\r\n\r\n    if (video) {\r\n      resetVideo(node);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n* Data Toggle\r\n*\r\n* @param {HTMLElement} node - Node to manipulate\r\n* @param {Boolean} overlay - if used to a overlay\r\n*/\r\nexport function dataToggleVideo(node, overlay, video) {\r\n\r\n  const { dataset, id } = node;\r\n  const active = isActive(dataset);\r\n\r\n  if (active) {\r\n    dataset.active = \"false\";\r\n  } else {\r\n    dataset.active = \"true\";\r\n  }\r\n\r\n  if (overlay) {\r\n    overlayActionsVideo(id, node, { active, video })\r\n  }\r\n\r\n}\r\n","import { $Q, $Qll } from \"../utils/query-selector\";\r\n\r\n/**\r\n *\r\n * we control the price range filter in order to avoid that the minimum\r\n * value is greater than the highest value and that the highest\r\n * value is not less than the lowest value\r\n *\r\n */\r\nexport function rangeFilters() {\r\n  const rangein = $Qll(\".range-in input\");\r\n  const pricein = $Qll(\".price-in input\");\r\n  const progress = $Q('.slider-filter .pro');\r\n  const priceGap = 0;\r\n\r\n  rangein.forEach(input => {\r\n    if (pricein[0].value) {\r\n      progress.style.left = (pricein[0].value / rangein[0].max) * 10000 + \"%\";\r\n      progress.style.right = 100 - (pricein[1].value / rangein[1].max) * 10000 + \"%\";\r\n    }\r\n\r\n    input.addEventListener(\"input\", (e) => {\r\n      const minVal = Number(rangein[0].value);\r\n      const maxVal = Number(rangein[1].value);\r\n      \r\n      if(maxVal - minVal < priceGap){\r\n        if(e.target.className === \"range-min\") {\r\n          rangein[0].value = cents(maxVal - priceGap);\r\n        } else {\r\n          rangein[1].value = cents(minVal + priceGap);\r\n        }\r\n      } else {\r\n        pricein[0].value = cents(minVal, true);\r\n        pricein[1].value = cents(maxVal, true);\r\n        progress.style.left = (minVal / rangein[0].max) * 100 + \"%\";\r\n        progress.style.right = 100 - (maxVal / rangein[1].max) * 100 + \"%\";\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction cents(str, fixed) {\r\n  const number = Number(str) / 100\r\n  if (fixed) return number.toFixed(2);\r\n  return number\r\n}\r\n\r\n(function formatValues() {\r\n  $Qll('.price-in input').forEach(\r\n    (item) => {\r\n      item.value = cents(item.value, true)\r\n    }\r\n  )\r\n})();\r\n","import { defultSortBy } from \"../components/sort-by\";\r\nimport \"../scss/collection.scss\";\r\nimport { toggleDataActive } from \"../utils/toggle-dataset\";\r\nimport { rangeFilters } from \"../components/filters-range\";\r\n\r\ndefultSortBy();\r\nrangeFilters();\r\n\r\ntoggleDataActive(\r\n  '#filter-open',\r\n  '#filter',\r\n  {\r\n    overlay: true,\r\n  },\r\n)\r\n\r\ntoggleDataActive(\r\n  '.filter-form__name svg',\r\n  '#filter',\r\n  {\r\n    overlay: true,\r\n  },\r\n)\r\n"],"names":["$Qll","nodes","parent","document","querySelectorAll","$Q","node","querySelector","Shopify","queryParams","location","search","length","params","substring","split","i","keyValue","decodeURIComponent","activeVideoFrame","control","addEventListener","overlay","video","dataset","id","active","isActive","idOverlay","parentNode","removeChild","modal","innerHTML","outerHTML","createElement","setAttribute","classList","add","insertBefore","toggleDataActive","overlayActionsVideo","dataToggleVideo","forEach","button","section","dataToggle","overlayActions","config","closeSelector","cents","str","fixed","number","Number","toFixed","item","value","target","sort_by","URLSearchParams","toString","rangein","pricein","progress","input","style","left","max","right","e","minVal","maxVal","className","rangeFilters"],"sourceRoot":""}