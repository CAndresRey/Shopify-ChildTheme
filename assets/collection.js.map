{"version":3,"file":"collection.js","mappings":"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","sources":["webpack://theme-base-shopify/./src/utils/query-selector.js","webpack://theme-base-shopify/./src/components/sort-by.js","webpack://theme-base-shopify/./src/utils/toggle-dataset.js","webpack://theme-base-shopify/./src/components/clear-filter-all.js","webpack://theme-base-shopify/./src/templates/collection.js","webpack://theme-base-shopify/./src/components/filters-range.js"],"sourcesContent":["/**\n * @param {String} nodes - ClassList with DOM reference\n * @param {HTMLElement} parent - Parent of nodes\n * @returns {Array} Array of nodes in DOM\n */\nconst $Qll = (\n  nodes,\n  // eslint-disable-next-line no-undef\n  parent) => [...(parent || document).querySelectorAll(nodes)]\n\n/**\n *\n * @param {HTMLElement} node - ClassName with DOM reference\n * @param {HTMLElement} parent - Parent of nodes\n * @returns {Node} Node in DOM\n */\n// eslint-disable-next-line no-undef\nconst $Q = (node, parent) => (parent || document).querySelector(node)\n\nexport {\n  $Qll,\n  $Q,\n}\n","import { $Q } from \"../utils/query-selector\";\n\n// eslint-disable-next-line no-undef\nShopify.queryParams = {};\n\n/**\n * Update sort_by query parameter on select change\n */\nexport const defultSortBy = () => {\n  $Q('#sort-by')\n  .addEventListener(\n    'change',\n    ({ target }) => {\n      /* eslint-disable no-undef */\n      Shopify.queryParams.sort_by = target.value;\n      location.search = new URLSearchParams(Shopify.queryParams).toString();\n      /* eslint-enable no-undef */\n  });\n}\n\n/**\n * Preserve existing query parameters\n */\n// eslint-disable-next-line func-names\n(function () {\n  /* eslint-disable no-undef */\n  if (location.search.length) {\n    const params = location.search.substring(1).split('&');\n\n    for (let i = 0; i < params.length; i++) {\n      const keyValue = params[i].split('=');\n\n      if (keyValue.length) {\n        Shopify.queryParams[\n          decodeURIComponent(keyValue[0])\n        ] = decodeURIComponent(keyValue[1]);\n      }\n    }\n  }\n  /* eslint-enable no-undef */\n}());\n","import { $Q } from \"./query-selector\"\n\n/**\n *\n * @param {String} id - ID from node manipulate\n * @param {Boolean} active - If modal active\n * @param {HTMLElement} node - Node to manipulate\n */\n const overlayActions = (id, active, node) => {\n  const idOverlay = `overlay--${id}`;\n  const parent = node.parentNode;\n\n  if (!active) {\n    // eslint-disable-next-line no-undef\n    const overlay = document.createElement(\"div\");\n\n    overlay.setAttribute(\"id\", idOverlay);\n    overlay.classList.add(\"overlay\");\n\n    parent.insertBefore(overlay, node);\n    // eslint-disable-next-line no-use-before-define\n    toggleDataActive(`#${idOverlay}`, `#${id}`, { overlay: true });\n  } else {\n    parent.removeChild($Q(`#${idOverlay}`));\n  }\n}\n\n/**\n * To validate state in dataset node\n */\n const isActive = ({ active }) => active === \"true\";\n\n/**\n* Data Toggle\n*\n* @param {HTMLElement} node - Node to manipulate\n* @param {Boolean} overlay - if used to a overlay\n*/\nexport function dataToggle(node, overlay) {\n  const { dataset, id } = node;\n  const active = isActive(dataset);\n\n  if (active) {\n    dataset.active = \"false\";\n  } else {\n    dataset.active = \"true\";\n  }\n\n  // eslint-disable-next-line no-unused-expressions\n  overlay && overlayActions(id, active, node);\n}\n\n/**\n * Data Active toggle\n *\n * @param {String} control - ID button control\n * @param {String} node - ID modal\n * @param {Object} config - Object with overlay, closeSelector\n */\nexport const toggleDataActive = (control, node, config = {}) => {\n  const { overlay, closeSelector } = config;\n\n  $Q(control).addEventListener(\"click\", () => {\n    dataToggle($Q(node), overlay);\n  });\n\n  // eslint-disable-next-line no-unused-expressions\n  closeSelector && $Q(closeSelector).addEventListener(\n    \"click\",\n    () => {\n      dataToggle($Q(node), overlay);\n    },\n  );\n}\n","import { $Q } from \"../utils/query-selector\";\n\nconst clearFilterAll = () => {\n  const base = document.location.pathname;\n\n  document.location.href = base;\n\n}\n\n(function () {\n  $Q('.clear-filter-js').addEventListener('change', clearFilterAll)\n}());\n","import { defultSortBy } from \"../components/sort-by\";\nimport \"../scss/collection.scss\";\nimport \"../scss/collection.scss\";\nimport { toggleDataActive } from \"../utils/toggle-dataset\";\nimport { rangeFilters } from \"../components/filters-range\";\nimport '../components/clear-filter-all';\n\ndefultSortBy();\n\ntoggleDataActive(\n  '#filter-open',\n  '#filter',\n  {\n    overlay: true,\n  },\n)\n\ntoggleDataActive(\n  '.filter-form__name svg',\n  '#filter',\n  {\n    overlay: true,\n  },\n)\n\nrangeFilters();\n","import { $Q, $Qll } from \"../utils/query-selector\"\n/**\n *\n * we control the price range filter in order to avoid that the minimum\n * value is greater than the highest value and that the highest\n * value is not less than the lowest value\n *\n */\nexport function rangeFilters() {\n  const rangein = $Qll(\".range-in input\");\n  const pricein = $Qll(\".price-in input\");\n  const progress = $Q('.slider-filter .pro');\n  const priceGap = 0;\n  rangein.forEach((input) => {\n    if (pricein[0].value) {\n      progress.style.left = `${(pricein[0].value / rangein[0].max) * 100 }%`;\n      progress.style.right = `${100 - (pricein[1].value / rangein[1].max) * 100 }%`;\n    }\n      input.addEventListener(\"input\", (e) => {\n          const minVal = rangein[0].value,\n          maxVal = rangein[1].value;\n         if (maxVal - minVal < priceGap) {\n             if (e.target.className === \"range-min\") {\n                  rangein[0].value = maxVal - priceGap;\n             } else {\n                  rangein[1].value = minVal + priceGap;\n             }\n         } else {\n              pricein[0].value = parseFloat(minVal).toFixed(2);\n              pricein[1].value = parseFloat(maxVal).toFixed(2);\n              progress.style.left = `${(minVal / rangein[0].max) * 100 }%`;\n              progress.style.right = `${100 - (maxVal / rangein[1].max) * 100 }%`;\n         }\n      });\n  });\n}\n"],"names":["$Qll","nodes","parent","document","querySelectorAll","$Q","node","querySelector","Shopify","queryParams","location","search","length","params","substring","split","i","keyValue","decodeURIComponent","dataToggle","overlay","dataset","id","active","isActive","idOverlay","parentNode","removeChild","createElement","setAttribute","classList","add","insertBefore","toggleDataActive","overlayActions","control","config","closeSelector","addEventListener","clearFilterAll","base","pathname","href","target","sort_by","value","URLSearchParams","toString","rangein","pricein","progress","forEach","input","style","left","max","right","e","minVal","maxVal","className","parseFloat","toFixed","rangeFilters"],"sourceRoot":""}